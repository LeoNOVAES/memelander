/**
 * Filter rules are an array that contains replacement rules.
 */
/**
 * An object containing a replacement rule for the `filterWithFilterRules`
 * function.
 */
export interface FilterRule {
    /**
     * String or pattern to replace.
     */
    source: RegExp | string;
    /**
     * Replacement string.
     */
    target: string;
}
export declare const CLEAN_EXPLICIT_FILTER_RULES: FilterRule[];
export declare const FEATURE_FILTER_RULES: FilterRule[];
export declare const LIVE_FILTER_RULES: FilterRule[];
export declare const NORMALIZE_FEATURE_FILTER_RULES: {
    source: RegExp;
    target: string;
}[];
export declare const PARODY_FILTER_RULES: FilterRule[];
export declare const REISSUE_FILTER_RULES: FilterRule[];
/**
 * Filter rules to remove "Remastered..."-like strings from a text.
 */
export declare const REMASTERED_FILTER_RULES: FilterRule[];
export declare const SUFFIX_FILTER_RULES: FilterRule[];
/**
 * Special filter rules to remove leftovers after filtering text using
 * `YOUTUBE_TRACK_FILTER_RULES` filter rules.
 */
export declare const TRIM_SYMBOLS_FILTER_RULES: FilterRule[];
/**
 * Filter to trim text containing "Various Artists" to just various
 * artists. Useful for album artist on last.fm where anything more is
 * rejected.
 */
export declare const VARIOUS_ARTISTS_FILTER_RULES: FilterRule[];
/**
 * Filter rules to remove "(Album|Stereo|Mono Version)"-like strings
 * from a text.
 */
export declare const VERSION_FILTER_RULES: FilterRule[];
/**
 * Filter rules to remove YouTube suffixes and prefixes from a text.
 */
export declare const YOUTUBE_TRACK_FILTER_RULES: FilterRule[];
export declare const ADDITIONAL_ARTISTS_FILTER_RULES: FilterRule[];
